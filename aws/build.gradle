/*
 * Copyright 2015-2020 Ritense BV, the Netherlands.
 *
 * Licensed under EUPL, Version 1.2 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
    implementation "org.springframework.boot:spring-boot"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.data:spring-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-autoconfigure"

    api "software.amazon.awssdk:sqs"
    api "software.amazon.awssdk:sns"
    api "software.amazon.awssdk:ssm"

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    api group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

    jar {
        enabled = true
        manifest {
            attributes("Implementation-Title": "Ritense AWS spring boot starter")
            attributes("Implementation-Version": projectVersion)
        }
    }
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.baeldung.fatjar.Application'
    }
    archiveBaseName = 'all-in-one-jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

apply from: "gradle/publishing.gradle"